<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Server</name>
    </assembly>
    <members>
        <member name="T:Server.Contracts.PhotoEntry">
            <summary>
            Contains the details of PhotoEntry
            </summary>
        </member>
        <member name="P:Server.Contracts.PhotoEntry.ReferenceId">
            <summary>
            Reference Id of a single entry. This must be unique. Will be autogenerated if left empty
            </summary>
        </member>
        <member name="P:Server.Contracts.PhotoEntry.Theme">
            <summary>
            Theme of the photo. This must correspond to <see cref="T:Server.Contracts.PhotoTheme"/>
            </summary>
        </member>
        <member name="P:Server.Contracts.PhotoEntry.Photographer">
            <summary>
            Details of the photographer who uploaded the photo
            </summary>
        </member>
        <member name="P:Server.Contracts.PhotoEntry.FileId">
            <summary>
            Reference Id of the associated photo. This should always be valid.
            </summary>
        </member>
        <member name="P:Server.Contracts.PhotoEntry.Caption">
            <summary>
            A creative caption to go in with your photo
            </summary>
        </member>
        <member name="P:Server.Contracts.PhotoEntry.UploadedOn">
            <summary>
            Date and time of the upload
            </summary>
        </member>
        <member name="T:Server.Contracts.Photographer">
            <summary>
            Contains details of Photographer
            </summary>
        </member>
        <member name="P:Server.Contracts.Photographer.ReferenceId">
            <summary>
            Reference Id of the phographer
            </summary>
        </member>
        <member name="P:Server.Contracts.Photographer.UploaderName">
            <summary>
            Name of the photographer
            </summary>
        </member>
        <member name="T:Server.Contracts.PhotographerVoteDetails">
            <summary>
            Contains voting details of a photographer
            </summary>
        </member>
        <member name="P:Server.Contracts.PhotographerVoteDetails.Photographer">
            <summary>
            Details of the photographer whos voting details are encapsulated
            </summary>
        </member>
        <member name="P:Server.Contracts.PhotographerVoteDetails.FirstVoteId">
            <summary>
            Reference Id of the first voted <see cref="T:Server.Contracts.PhotoEntry"/>
            </summary>
        </member>
        <member name="P:Server.Contracts.PhotographerVoteDetails.SecondVoteId">
            <summary>
            Reference Id of the second voted <see cref="T:Server.Contracts.PhotoEntry"/>
            </summary>
        </member>
        <member name="P:Server.Contracts.PhotographerVoteDetails.ThirdVoteId">
            <summary>
            Reference Id of the third voted <see cref="T:Server.Contracts.PhotoEntry"/>
            </summary>
        </member>
        <member name="T:Server.Contracts.PhotoTheme">
            <summary>
            Contains details of PhotoTheme
            </summary>
        </member>
        <member name="P:Server.Contracts.PhotoTheme.Theme">
            <summary>
            Theme of the photo contest
            </summary>
        </member>
        <member name="P:Server.Contracts.PhotoTheme.ContestDate">
            <summary>
            Date of the contest
            </summary>
        </member>
        <member name="T:Server.Contracts.ScoreDetail">
            <summary>
            Contains scores of a PhotoRntry
            </summary>
        </member>
        <member name="P:Server.Contracts.ScoreDetail.EntryId">
            <summary>
            Reference Id of the PhotoEntry
            </summary>
        </member>
        <member name="P:Server.Contracts.ScoreDetail.Score">
            <summary>
            Score of the referenced PhotoEnty
            </summary>
        </member>
        <member name="T:Server.Controllers.PhotoEntryController">
            <summary>
            PhotoEntry Controller
            </summary>
        </member>
        <member name="M:Server.Controllers.PhotoEntryController.#ctor(Provider.IPhotoEntryProvider,Provider.IReferenceIdMapper)">
            <summary>
            Initilises a PhotoEntry Controller
            </summary>
            <param name="_photoEntryProvider"></param>
            <param name="_referenceIdMapper"></param>
        </member>
        <member name="M:Server.Controllers.PhotoEntryController.GetAll">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Server.Controllers.PhotoEntryController.GetAll(System.String)">
            <summary>
            
            </summary>
            <param name="theme"></param>
            <returns></returns>
        </member>
        <member name="M:Server.Controllers.PhotoEntryController.AddPhotoEntry(Server.Contracts.PhotoEntry)">
            <summary>
            
            </summary>
            <param name="photoEntry"></param>
            <returns></returns>
        </member>
        <member name="M:Server.Controllers.PhotoEntryController.UpdatePhotoEntry(System.String,Server.Contracts.PhotoEntry)">
            <summary>
            
            </summary>
            <param name="referenceId"></param>
            <param name="photoEntry"></param>
            <returns></returns>
        </member>
        <member name="M:Server.Controllers.PhotoEntryController.Delete(System.String)">
            <summary>
            
            </summary>
            <param name="referenceId"></param>
        </member>
        <member name="T:Server.Program">
            <summary>
            Program class
            </summary>
        </member>
        <member name="M:Server.Program.Main(System.String[])">
            <summary>
            Entry function
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Server.Program.CreateHostBuilder(System.String[])">
            <summary>
            Creates a <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder"/>
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:Server.Startup">
            <summary>
            The <see cref="T:Server.Startup"/> class configures services and the app's request pipeline.
            </summary>
        </member>
        <member name="P:Server.Startup.Configuration">
            <summary>
            Configuration
            </summary>
        </member>
        <member name="M:Server.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Initialises a <see cref="T:Server.Startup"/> class
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="M:Server.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:Server.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app"></param>
            <param name="env"></param>
        </member>
    </members>
</doc>
