<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Provider.Implementation</name>
    </assembly>
    <members>
        <member name="T:Provider.Implementation.PhotoEntryProvider">
            <summary>
            Database access layer of <see cref="T:Provider.Models.PhotoEntry"/>
            </summary>
        </member>
        <member name="M:Provider.Implementation.PhotoEntryProvider.#ctor(System.Data.IDbConnection,Provider.IReferenceIdMapper)">
            <summary>
            Initializes a new instance of PhotoEntryProvider class
            </summary>
            <param name="_dbConnection"></param>
            <param name="_referenceIdMapper"></param>
        </member>
        <member name="M:Provider.Implementation.PhotoEntryProvider.GetById(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Provider.Implementation.PhotoEntryProvider.GetAll">
            <inheritdoc />
        </member>
        <member name="M:Provider.Implementation.PhotoEntryProvider.Create(Provider.Models.PhotoEntry)">
            <inheritdoc />
        </member>
        <member name="M:Provider.Implementation.PhotoEntryProvider.Update(Provider.Models.PhotoEntry,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Provider.Implementation.PhotoEntryProvider.Delete(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Provider.Implementation.PhotoEntryProvider.GetPhotoEntries(System.String)">
            <summary>
            Retreves a list of all the <see cref="T:Provider.Models.PhotoEntry"/> in database with the given theme
            </summary>
            <param name="theme"/>
            <returns>Enumerable of <see cref="T:Provider.Models.PhotoEntry"/></returns>
        </member>
        <member name="T:Provider.Implementation.PhotographerProvider">
            <summary>
            Database access layer of <see cref="T:Provider.Models.Photographer"/>
            </summary>
        </member>
        <member name="M:Provider.Implementation.PhotographerProvider.#ctor(System.Data.IDbConnection,Provider.IReferenceIdMapper)">
            <summary>
            Initializes a new instance of PhotographerProvider class
            </summary>
            <param name="_dbConnection"></param>
            <param name="_referenceIdMapper"></param>
        </member>
        <member name="M:Provider.Implementation.PhotographerProvider.Create(Provider.Models.Photographer)">
            <inheritdoc/>
        </member>
        <member name="M:Provider.Implementation.PhotographerProvider.Delete(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Provider.Implementation.PhotographerProvider.GetById(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Provider.Implementation.PhotographerProvider.GetAll">
            <inheritdoc/>
        </member>
        <member name="M:Provider.Implementation.PhotographerProvider.Update(Provider.Models.Photographer,System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Provider.Implementation.ReferenceIdProvider">
            <summary>
            Mapps reference id to integer id from database.
            </summary>
        </member>
        <member name="M:Provider.Implementation.ReferenceIdProvider.#ctor(System.Data.IDbConnection)">
            <summary>
            Initializes a new instance of ReferenceIdProvider class
            </summary>
            <param name="_dbConnection"></param>
        </member>
        <member name="M:Provider.Implementation.ReferenceIdProvider.GetIntegerId(System.String,Provider.IdType)">
            <inheritdoc/>
        </member>
        <member name="M:Provider.Implementation.ReferenceIdProvider.GetReferenceId(System.Int32,Provider.IdType)">
            <inheritdoc/>
        </member>
        <member name="M:Provider.Implementation.ReferenceIdProvider.InsertIdMap(Provider.Models.Id,Provider.IdType)">
            <inheritdoc/>
        </member>
    </members>
</doc>
