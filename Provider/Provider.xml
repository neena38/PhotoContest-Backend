<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Provider</name>
    </assembly>
    <members>
        <member name="T:Provider.IdType">
            <summary>
            Type of the asset for id look up
            </summary>
        </member>
        <member name="F:Provider.IdType.PhotoEntry">
            <summary>
            PhotoEntry
            </summary>
        </member>
        <member name="F:Provider.IdType.File">
            <summary>
            File
            </summary>
        </member>
        <member name="T:Provider.IPhotoEntryProvider">
            <summary>
            An interface for fetching photo entry records
            </summary>
        </member>
        <member name="M:Provider.IPhotoEntryProvider.GetPhotoEntries">
            <summary>
            Retreves a list of all the <see cref="T:Provider.Models.PhotoEntry"/> in database
            </summary>
            <returns>Enumerable of <see cref="T:Provider.Models.PhotoEntry"/></returns>
        </member>
        <member name="M:Provider.IPhotoEntryProvider.GetPhotoEntries(System.String)">
            <summary>
            Retreves a list of all the <see cref="T:Provider.Models.PhotoEntry"/> in database with the given theme
            </summary>
            <param name="theme"/>
            <returns>Enumerable of <see cref="T:Provider.Models.PhotoEntry"/></returns>
        </member>
        <member name="M:Provider.IPhotoEntryProvider.AddPhotoEntry(Provider.Models.PhotoEntry)">
            <summary>
            Creates a new <see cref="T:Provider.Models.PhotoEntry"/> in the database
            </summary>
            <param name="photoEntry"></param>
            <returns>Created <see cref="T:Provider.Models.PhotoEntry"/> from the database</returns>
        </member>
        <member name="M:Provider.IPhotoEntryProvider.UpdatePhotoEntry(Provider.Models.PhotoEntry)">
            <summary>
            Updates <see cref="T:Provider.Models.PhotoEntry"/> by ID
            </summary>
            <param name="photoEntry"></param>
            <returns>Updated <see cref="T:Provider.Models.PhotoEntry"/> from the database</returns>
        </member>
        <member name="M:Provider.IPhotoEntryProvider.DeletePhotoEntry(System.Int32)">
            <summary>
            Deletes the record of <see cref="T:Provider.Models.PhotoEntry"/> with the specified ID
            </summary>
            <param name="id"></param>
        </member>
        <member name="T:Provider.IReferenceIdMapper">
            <summary>
            An interface for referenceId - integerId mapper
            </summary>
        </member>
        <member name="M:Provider.IReferenceIdMapper.GetIntegerId(System.String,Provider.IdType)">
            <summary>
            Maps the reference Id to its corresponding integer ID in the Database
            </summary>
            <param name="referenceId"></param>
            <param name="idType"></param>
            <returns>Integer Id</returns>
        </member>
        <member name="M:Provider.IReferenceIdMapper.GetReferenceId(System.Int32,Provider.IdType)">
            <summary>
            Maps the integer ID to its corresponding publically visible reference Id
            </summary>
            <param name="id"></param>
            <param name="idType"></param>
            <returns>String reperesentation of the GUID</returns>
        </member>
        <member name="T:Provider.IResolvable">
            <summary>
            An interface for resolving 
            </summary>
        </member>
        <member name="P:Provider.IResolvable.Id">
            <summary>
            Database integer Id
            </summary>
        </member>
        <member name="M:Provider.IResolvable.ResolveId(Provider.IReferenceIdMapper)">
            <summary>
            Resolve the integer id of the calling object
            </summary>
            <param name="mapper"></param>
        </member>
        <member name="M:Provider.IResolvable.ResolveReferenceId(Provider.IReferenceIdMapper)">
            <summary>
            Resolve the reference id of the calling object
            </summary>
            <param name="mapper"></param>
        </member>
        <member name="T:Provider.Models.PhotoEntry">
            <summary>
            Contains the details of PhotoEntry
            </summary>
        </member>
        <member name="P:Provider.Models.PhotoEntry.ReferenceId">
            <summary>
            Reference Id of a single entry. This must be unique. Will be autogenerated if left empty
            </summary>
        </member>
        <member name="P:Provider.Models.PhotoEntry.Theme">
            <summary>
            Theme of the photo. This must correspond to <see cref="T:Provider.Models.PhotoTheme"/>
            </summary>
        </member>
        <member name="P:Provider.Models.PhotoEntry.Photographer">
            <summary>
            Details of the photographer who uploaded the photo
            </summary>
        </member>
        <member name="P:Provider.Models.PhotoEntry.FileId">
            <summary>
            Reference Id of the associated photo. This should always be valid.
            </summary>
        </member>
        <member name="P:Provider.Models.PhotoEntry.Caption">
            <summary>
            A creative caption to go in with your photo
            </summary>
        </member>
        <member name="P:Provider.Models.PhotoEntry.UploadedOn">
            <summary>
            Date and time of the upload
            </summary>
        </member>
        <member name="T:Provider.Models.Photographer">
            <summary>
            Contains details of Photographer
            </summary>
        </member>
        <member name="P:Provider.Models.Photographer.Id">
            <summary>
            Reference Id of the phographer
            </summary>
        </member>
        <member name="P:Provider.Models.Photographer.UploaderName">
            <summary>
            Name of the photographer
            </summary>
        </member>
        <member name="T:Provider.Models.PhotographerVoteDetails">
            <summary>
            Contains voting details of a photographer
            </summary>
        </member>
        <member name="P:Provider.Models.PhotographerVoteDetails.Photographer">
            <summary>
            Details of the photographer whos voting details are encapsulated
            </summary>
        </member>
        <member name="P:Provider.Models.PhotographerVoteDetails.FirstVoteId">
            <summary>
            Reference Id of the first voted <see cref="T:Provider.Models.PhotoEntry"/>
            </summary>
        </member>
        <member name="P:Provider.Models.PhotographerVoteDetails.SecondVoteId">
            <summary>
            Reference Id of the second voted <see cref="T:Provider.Models.PhotoEntry"/>
            </summary>
        </member>
        <member name="P:Provider.Models.PhotographerVoteDetails.ThirdVoteId">
            <summary>
            Reference Id of the third voted <see cref="T:Provider.Models.PhotoEntry"/>
            </summary>
        </member>
        <member name="T:Provider.Models.PhotoTheme">
            <summary>
            Contains details of PhotoTheme
            </summary>
        </member>
        <member name="P:Provider.Models.PhotoTheme.Theme">
            <summary>
            Theme of the photo contest
            </summary>
        </member>
        <member name="P:Provider.Models.PhotoTheme.ContestDate">
            <summary>
            Date of the contest
            </summary>
        </member>
        <member name="T:Provider.Models.ScoreDetail">
            <summary>
            Contains scores of a PhotoRntry
            </summary>
        </member>
        <member name="P:Provider.Models.ScoreDetail.EntryId">
            <summary>
            Reference Id of the PhotoEntry
            </summary>
        </member>
        <member name="P:Provider.Models.ScoreDetail.Score">
            <summary>
            Score of the referenced PhotoEnty
            </summary>
        </member>
    </members>
</doc>
